/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package trees;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    public void emptyTree(){
        BinaryTree binaryTree= new BinaryTree();
        assertNull(binaryTree.getRoot());
    }

    @Test
    public void singleRoot(){
        BinaryTree binaryTree= new BinaryTree();
        binaryTree.setRoot(new Node(10));
        assertEquals(10, binaryTree.getRoot().getKey());
    }

    @Test
    public void addChild(){
        BinaryTree binaryTree= new BinaryTree();
        binaryTree.setRoot(new Node(10));

        binaryTree.getRoot().setLeft(new Node(20));
        binaryTree.getRoot().setRight(new Node(30));

        assertEquals(20, binaryTree.getRoot().getLeft().getKey());
        assertEquals(30, binaryTree.getRoot().getRight().getKey());
    }

    @Test
    public void preOrder(){
        BinaryTree binaryTree= new BinaryTree();
        binaryTree.setRoot(new Node(10));

        binaryTree.getRoot().setLeft(new Node(20));
        binaryTree.getRoot().setRight(new Node(30));

        binaryTree.preOrderTraverse(binaryTree.getRoot());

        assertEquals("[10, 20, 30]",binaryTree.getPreOrder()+"");

    }

    @Test
    public void inOrder(){
        BinaryTree binaryTree= new BinaryTree();
        binaryTree.setRoot(new Node(10));

        binaryTree.getRoot().setLeft(new Node(20));
        binaryTree.getRoot().setRight(new Node(30));

        binaryTree.inOrderTraverse(binaryTree.getRoot());

        assertEquals("[20, 10, 30]",binaryTree.getInOrder()+"");

    }

    @Test
    public void postOrder(){
        BinaryTree binaryTree= new BinaryTree();
        binaryTree.setRoot(new Node(10));

        binaryTree.getRoot().setLeft(new Node(20));
        binaryTree.getRoot().setRight(new Node(30));

        binaryTree.postOrderTraverse(binaryTree.getRoot());

        assertEquals("[20, 30, 10]",binaryTree.getPostOrder()+"");

    }
}
